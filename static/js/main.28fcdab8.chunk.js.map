{"version":3,"sources":["ui-kit/icons/svg/icon-plus-with-circle.svg","ui-kit/BaseModal.jsx","ui-kit/Modal.jsx","hooks/useOnClickOutside.js","hooks/useOnKeyEvent.js","components/RowItem.styles.js","helpers/Row.js","components/RowItem.js","components/Row.styles.js","components/Row.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","portalRoot","document","getElementById","BaseModal","children","modalRoot","React","useRef","modalRef","current","createElement","style","display","useEffect","modalEl","appendChild","disableBodyScroll","enableBodyScroll","remove","ReactDOM","createPortal","Overlay","Container","ref","styled","div","fadeIn","keyframes","Modal","isOpen","onClose","closeOnClickOutside","focusOnOpenRef","onClickOutsideNode","onClickOutside","shouldListen","node","handleClick","useCallback","event","contains","target","addEventListener","removeEventListener","useOnClickOutside","key","keyEvent","onKeyEvent","handleKeyEvent","useOnKeyEvent","focus","Layout","Cancel","onClick","UpperRule","LowerRule","Title","hr","Body","Actions","container","alignItems","background","marginTop","redDot","width","height","borderRadius","yellowDot","greenDot","STATUS_ORDER","RowItem","status","application","setSelectedApplication","setIsModalOpen","styles","role","title","new_status","label","rowContainer","justifyContent","borderTop","Row","data","useState","setIsOpen","email","applications","length","finalStatusIndex","indexOf","i","applicationIndex","findCurrentStatus","moment","profile","updated","fromNow","src","openIcon","alt","stopPropagation","map","id","padding","backgroundColor","color","App","isModalOpen","selectedApplication","fontWeight","results","element","_","jobboard_title","Boolean","window","location","hostname","match","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2j5CAAAA,EAAOC,QAAU,IAA0B,mD,4kCCK3C,IAAMC,EAAaC,SAASC,eAAe,eAE9BC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBC,EAAYC,IAAMC,OAAO,MACzBC,EAAWF,IAAMC,OAAO,MAmB9B,OAjB0B,OAAtBF,EAAUI,UACZJ,EAAUI,QAAUR,SAASS,cAAc,OAC3CL,EAAUI,QAAQE,MAAMC,QAAU,YAGpCC,qBAAU,WACR,IAAMC,EAAUN,EAASC,QAKzB,OAHAT,EAAWe,YAAYV,EAAUI,SACjCO,YAAkBF,GAEX,WACLG,YAAiBH,GACjBT,EAAUI,QAAQS,YAEnB,IAGDb,EAAUI,SACVU,IAASC,aACP,oCACE,kBAACC,EAAD,MACA,kBAACC,EAAD,CAAWC,IAAKf,GAAWJ,IAE7BC,EAAUI,UAKVY,EAAUG,IAAOC,IAAV,KAYPC,EAASC,YAAH,KASNL,EAAYE,IAAOC,IAAV,IAmBAC,G,2yCCjEf,IAAME,EAAQ,SAAC,GAMR,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,QACA1B,EAGI,EAHJA,SAGI,IAFJ2B,2BAEI,aADJC,sBACI,MADa,KACb,EAMEC,ECXyB,SAACC,GAAyC,IAAzBC,IAAwB,yDAClEC,EAAO7B,mBAEP8B,EAAcC,uBAClB,SAAAC,GACOH,EAAK3B,UAEN2B,EAAK3B,QAAQ+B,SAASD,EAAME,SAKhCP,OAEF,CAACA,IAeH,OAZArB,qBAAU,WAOR,OANIsB,EACFlC,SAASyC,iBAAiB,YAAaL,GAAa,GAEpDpC,SAAS0C,oBAAoB,YAAaN,GAAa,GAGlD,WACLpC,SAAS0C,oBAAoB,YAAaN,GAAa,MAExD,CAACF,EAAcE,IAEXD,EDlBoBQ,EALG,WACxBb,GACFD,MAGgED,GAUpE,OExB2B,SAACgB,EAAKC,EAAUC,GAAqC,IAAzBZ,IAAwB,yDACzEa,EAAiBV,uBACrB,SAAAC,GACMA,EAAMM,MAAQA,GAChBE,MAGJ,CAACF,EAAKE,IAERlC,qBAAU,WAOR,OANIsB,EACFlC,SAASyC,iBAAiBI,EAAUE,GAAgB,GAEpD/C,SAAS0C,oBAAoBG,EAAUE,GAAgB,GAGlD,WACL/C,SAAS0C,oBAAoBG,EAAUE,GAAgB,MAExD,CAACF,EAAUX,EAAca,IFJ5BC,CAAc,SAAU,QAASnB,EAASD,GAG1ChB,qBAAU,WACJgB,GAAUG,GACZA,EAAevB,QAAQyC,UAExB,CAACrB,EAAQG,IAEPH,EAKH,kBAAC,EAAD,CAAWA,OAAQA,GACjB,kBAACsB,EAAD,CAAQ5B,IAAKU,GACX,kBAACmB,EAAD,CAAQC,QAASvB,GAAjB,KACA,kBAACwB,EAAD,MACA,kBAACC,EAAD,MACCnD,IATE,MAeL+C,EAAS3B,IAAOC,IAAV,KAWN+B,EAAQhC,IAAOC,IAAV,KAQL2B,EAAS5B,IAAOC,IAAV,KAeN6B,EAAY9B,IAAOiC,GAAV,KAOTC,EAAOlC,IAAOC,IAAV,KASJ8B,EAAY/B,YAAO8B,EAAP9B,CAAH,KAITmC,EAAUnC,IAAOC,IAAV,K,iBG3GE,GACXmC,UAAW,CACPhD,QAAS,OACTiD,WAAY,SACZC,WAAY,QACZC,UAAW,qBAGfC,OAAQ,CACJpD,QAAQ,eACRqD,MAAO,OACPC,OAAQ,OACRJ,WAAY,UACZK,aAAc,OAElBC,UAAW,CACPxD,QAAQ,eACRqD,MAAO,OACPC,OAAQ,OACRJ,WAAY,UACZK,aAAc,OAElBE,SAAU,CACNzD,QAAQ,eACRqD,MAAO,OACPC,OAAQ,OACRJ,WAAY,UACZK,aAAc,QC3BTG,EAAe,CACxB,WACA,QACA,gBACA,uBACA,cACA,kBACA,SCFW,SAASC,EAAT,GAA2E,IAAD,ED4B5DC,EC5BKC,EAAuD,EAAvDA,YAAaC,EAA0C,EAA1CA,uBAAwBC,EAAkB,EAAlBA,eACnE,OAAO,yBAAKhE,MAAOiE,EAAOhB,UAAWP,QAAS,WAC1CsB,GAAe,GACfD,EAAuBD,KAEvB,uBAAG9D,MAAO,CAAEsD,MAAO,QAAUQ,EAAYI,KAAKC,OAC9C,4BACI,0BAAMnE,MAAOiE,GDqBIJ,ECrBe,OAACC,QAAD,IAACA,GAAD,UAACA,EAAaM,kBAAd,aAAC,EAAyBC,MDsBnD,aAAXR,EAA8B,SACnB,UAAXA,EAA2B,YAExB,eCxBEC,EAAYM,WAAWC,Q,qBCbrB,GACXC,aAAc,CACVrE,QAAS,OACTqD,MAAO,OACPiB,eAAgB,gBAChBrB,WAAY,SACZK,OAAQ,GACRJ,WAAY,UACZqB,UAAW,sBCEJ,SAASC,EAAT,GAAgE,IAAD,EAAhDC,EAAgD,EAAhDA,KAAMX,EAA0C,EAA1CA,uBAAwBC,EAAkB,EAAlBA,eAAkB,EAE9CW,oBAAS,GAFqC,mBAEnEzD,EAFmE,KAE3D0D,EAF2D,KAQ1E,OAAO,yBAAKlC,QAJO,WACfkC,GAAW1D,KAIX,yBAAKlB,MAAOiE,EAAOK,cACf,yBAAKtE,MAAO,CAAEsD,MAAO,QAAUoB,EAAKG,OACpC,yBAAK7E,MAAO,CAAEsD,MAAO,QHXA,SAACwB,GAE9B,IAAKA,EACD,MAAO,GAGX,GAA4B,IAAxBA,EAAaC,OACb,OAAOD,EAAa,GAAGV,WAAWC,MAKtC,IAFA,IAAIW,EAAmBrB,EAAasB,QAAQH,EAAa,GAAGV,WAAWC,OAE9Da,EAAI,EAAGA,EAAIJ,EAAaC,OAAQG,IAAK,CAC1C,IAAIC,EAAmBxB,EAAasB,QAAQH,EAAaI,GAAGd,WAAWC,OACnEc,EAAmBH,IACnBA,EAAmBG,GAI3B,OAAOxB,EAAaqB,GGRmBI,CAAkBV,EAAKI,eACtD,yBAAK9E,MAAO,CAAEsD,MAAO,QAAUoB,EAAKI,aAAaC,QACjD,6BAAMM,IAAM,UAACX,EAAKY,eAAN,aAAC,EAAcC,SAASC,WACpC,yBAAKC,IAAKC,IAAUC,IAAI,eAG5B,yBAAK3F,MAAO,CAAEC,QAAUiB,EAAU,QAAU,QAAUwB,QAAS,SAAAd,GAAK,OAAIA,EAAMgE,oBACzElB,EAAKI,aAAae,KAAI,SAAC/B,GAAD,OACnB,kBAAC,EAAD,CACI5B,IAAK4B,EAAYgC,GACjBhC,YAAaA,EACbC,uBAAwBA,EACxBC,eAAgBA,SC1BpC,IAAMC,EAAS,CACbhB,UAAW,CACTG,UAAW,GACX2C,QAAS,OACTC,gBAAiB,UACjBC,MAAO,YA4CIC,MAxCf,WAAgB,IAAD,MAEyBvB,oBAAS,GAFlC,mBAENwB,EAFM,KAEOnC,EAFP,OAGyCW,mBAAS,IAHlD,mBAGNyB,EAHM,KAGerC,EAHf,KAKb,OACE,0BAAM/D,MAAOiE,EAAOhB,WAElB,qCAEA,yBAAKjD,MAAO,CAAEC,QAAS,OAAQoG,WAAY,SACzC,yBAAKrG,MAAO,CAAEsD,MAAO,QAArB,QACA,yBAAKtD,MAAO,CAAEsD,MAAO,QAArB,UACA,yBAAKtD,MAAO,CAAEsD,MAAO,QAArB,UACA,6CAGDoB,EAAK4B,QAAQT,KAAI,SAACU,GAAD,OAChB,kBAAC9B,EAAD,CACKvC,IAAKqE,EAAQT,GACbpB,KAAM6B,EACNxC,uBAAwBA,EACxBC,eAAgBA,OAIvB,kBAAC,EAAM/C,MAAP,CAAaC,OAAQiF,EAAahF,QAAS,SAAAqF,GAAOxC,GAAe,GAAQD,EAAuB,MAC9F,kBAAC,EAAMlB,MAAP,YAAcuD,QAAd,IAAcA,GAAd,UAAcA,EAAqBlC,YAAnC,aAAc,EAA2BC,OACzC,kBAAC,EAAMpB,KAAP,KACE,sDAEGqD,QAFH,IAEGA,GAFH,UAEGA,EAAqBlC,YAFxB,aAEG,EAA2BuC,oBCnCpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNtG,IAASuG,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1H,SAASC,eAAe,SDyHpB,kBAAmB0H,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.28fcdab8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-plus-with-circle.bd65acdc.svg\";","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\nconst portalRoot = document.getElementById('portal-root');\n\nexport const BaseModal = ({ children }) => {\n  const modalRoot = React.useRef(null);\n  const modalRef = React.useRef(null);\n\n  if (modalRoot.current === null) {\n    modalRoot.current = document.createElement('div');\n    modalRoot.current.style.display = 'contents';\n  }\n\n  useEffect(() => {\n    const modalEl = modalRef.current;\n\n    portalRoot.appendChild(modalRoot.current);\n    disableBodyScroll(modalEl);\n\n    return () => {\n      enableBodyScroll(modalEl);\n      modalRoot.current.remove();\n    };\n  }, []);\n\n  return (\n    modalRoot.current &&\n    ReactDOM.createPortal(\n      <>\n        <Overlay />\n        <Container ref={modalRef}>{children}</Container>\n      </>,\n      modalRoot.current\n    )\n  );\n};\n\nconst Overlay = styled.div`\n  z-index: 100;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst Container = styled.div`\n  z-index: 101;\n\n  position: fixed;\n  left: 50%;\n  top: 20%;\n  transform: translate(-50%, -20%);\n\n  background-color: #ffffff;\n\n  width: 850px;\n  border-radius: 3px;\n\n  @media screen and (max-width: 850px) {\n    top: 40%;\n    transform: translate(-50%, -40%);\n    max-width: 95vw;\n  }\n\n  animation: ${fadeIn} 300ms ease-in-out;\n`;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { useOnClickOutside, useOnKeyEvent } from 'hooks';\nimport { BaseModal } from './BaseModal';\n\n/**\n * Usage:\n * <Modal.Modal>\n *   <Modal.Title>Hello</Modal.Title>\n *   <Modal.Body>I am a modal.</Modal.Body>\n *   <Modal.Actions><button>Click me!!</button></Modal.Actions>\n * </Modal.Modal>\n *\n */\nconst Modal = ({\n  isOpen,\n  onClose,\n  children,\n  closeOnClickOutside = true,\n  focusOnOpenRef = null\n}) => {\n  const onClickOutsideHandler = () => {\n    if (closeOnClickOutside) {\n      onClose();\n    }\n  };\n  const onClickOutsideNode = useOnClickOutside(onClickOutsideHandler, isOpen);\n  useOnKeyEvent('Escape', 'keyup', onClose, isOpen);\n\n  // Focus first input on modal open: accessibility best practice\n  useEffect(() => {\n    if (isOpen && focusOnOpenRef) {\n      focusOnOpenRef.current.focus();\n    }\n  }, [isOpen, focusOnOpenRef]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <BaseModal isOpen={isOpen}>\n      <Layout ref={onClickOutsideNode}>\n        <Cancel onClick={onClose}>x</Cancel>\n        <UpperRule />\n        <LowerRule />\n        {children}\n      </Layout>\n    </BaseModal>\n  );\n};\n\nconst Layout = styled.div`\n  display: grid;\n  grid-template-columns: 30px auto 30px 30px;\n  grid-template-rows: 60px 2px auto 2px minmax(112px, auto);\n\n  height: 100%;\n\n  font-size: 17px;\n  color: #444444;\n`;\n\nconst Title = styled.div`\n  grid-column: 2 / span 1;\n  grid-row: 1 / span 1;\n\n  display: flex;\n  align-items: center;\n`;\n\nconst Cancel = styled.div`\n  grid-column: 3 / span 2;\n  grid-row: 1 / span 1;\n\n  color: #999999;\n\n  border-left: 1px solid #d8d8d8;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n`;\n\nconst UpperRule = styled.hr`\n  grid-row: 2 / span 1;\n  grid-column: 1/-1;\n\n  border-top: 1px solid #d8d8d8;\n`;\n\nconst Body = styled.div`\n  grid-column: 2 / span 2;\n  grid-row: 3 / span 1;\n  min-width: 0;\n\n  padding-top: 2.353em;\n  padding-bottom: 2.353em;\n`;\n\nconst LowerRule = styled(UpperRule)`\n  grid-row: 4 / span 1;\n`;\n\nconst Actions = styled.div`\n  grid-column: 2 / span 2;\n  grid-row: 5 / span 1;\n\n  padding-top: 0.5em;\n  padding-bottom: 0.5em;\n`;\n\nexport { Modal, Title, Body, Actions };\n","import { useRef, useEffect, useCallback } from 'react';\n\n/**\n * Hook to run a function when clicking outside of a react element.\n *\n * Usage:\n *   const [isOpen, setIsOpen] = useState(false);\n *   const closeDropdown = useCallback(() => setIsOpen(false), []);\n *   const onClickOutsideNode = useOnClickOutside(onClose, isOpen);\n *\n *   // Attach ref to desired node via ref\n *   return <div ref={onClickOutsideNode}>{...content...}</div>\n *\n * @param {function} onClickOutside function to run on click outside\n * @param {boolean} shouldListen set false to prevent extra events when something is not open\n */\nexport const useOnClickOutside = (onClickOutside, shouldListen = true) => {\n  const node = useRef();\n\n  const handleClick = useCallback(\n    event => {\n      if (!node.current) return;\n\n      if (node.current.contains(event.target)) {\n        // inside click\n        return;\n      }\n      // outside click\n      onClickOutside();\n    },\n    [onClickOutside]\n  );\n\n  useEffect(() => {\n    if (shouldListen) {\n      document.addEventListener('mousedown', handleClick, false);\n    } else {\n      document.removeEventListener('mousedown', handleClick, false);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClick, false);\n    };\n  }, [shouldListen, handleClick]);\n\n  return node;\n};\n","import { useEffect, useCallback } from 'react';\n\n/**\n * Hook to run a function when a key event happens.\n *\n * Usage:\n *   useOnKeyEvent('Enter', 'keyup', onSubmit);\n *\n * @param {function} key key to listen for, eg/ 'Enter'\n * @param {function} keyEvent key event to listen for, eg/ 'keyup'\n * @param {function} onKeyEvent function to run on key press\n * @param {boolean} shouldListen set false to prevent extra events when something is not open\n */\nexport const useOnKeyEvent = (key, keyEvent, onKeyEvent, shouldListen = true) => {\n  const handleKeyEvent = useCallback(\n    event => {\n      if (event.key === key) {\n        onKeyEvent();\n      }\n    },\n    [key, onKeyEvent]\n  );\n  useEffect(() => {\n    if (shouldListen) {\n      document.addEventListener(keyEvent, handleKeyEvent, false);\n    } else {\n      document.removeEventListener(keyEvent, handleKeyEvent, false);\n    }\n\n    return () => {\n      document.removeEventListener(keyEvent, handleKeyEvent, false);\n    };\n  }, [keyEvent, shouldListen, handleKeyEvent]);\n};\n// 'Escape'\n","export default {\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n        background: 'white',\n        marginTop: '1px solid #2c3e50'\n    },\n\n    redDot: {\n        display:'inline-block',\n        width: '10px',\n        height: '10px',\n        background: '#e74c3c',\n        borderRadius: '50%',\n    },\n    yellowDot: {\n        display:'inline-block',\n        width: '10px',\n        height: '10px',\n        background: '#f1c40f',\n        borderRadius: '50%',\n    },\n    greenDot: {\n        display:'inline-block',\n        width: '10px',\n        height: '10px',\n        background: '#2ecc71',\n        borderRadius: '50%',\n    }\n}","export const STATUS_ORDER = [\n    'Archived',\n    'Draft',\n    'Resume review',\n    'Phone screen invited',\n    'Hiring pool',\n    'On site invited',\n    'Hired',\n]\n\nexport const findCurrentStatus = (applications) => {\n\n    if (!applications) {\n        return ''\n    }\n\n    if (applications.length === 1) {\n        return applications[0].new_status.label;\n    }\n\n    let finalStatusIndex = STATUS_ORDER.indexOf(applications[0].new_status.label);\n\n    for (let i = 1; i < applications.length; i++) {\n        let applicationIndex = STATUS_ORDER.indexOf(applications[i].new_status.label)\n        if (applicationIndex > finalStatusIndex) {\n            finalStatusIndex = applicationIndex\n        }\n    }\n\n    return STATUS_ORDER[finalStatusIndex]\n\n}\n\nexport const calculateDot = (status) => {\n    if (status === \"Archived\") return 'redDot'\n    if (status === \"Draft\") return 'yellowDot'\n\n    return 'greenDot'\n}","import React from 'react';\n\nimport styles from './RowItem.styles'\nimport { calculateDot } from '../helpers/Row'\n\nexport default function RowItem({ application, setSelectedApplication, setIsModalOpen }) {\n    return <div style={styles.container} onClick={() => {\n        setIsModalOpen(true);\n        setSelectedApplication(application);\n    }}>\n        <p style={{ width: '28%' }}>{application.role.title}</p>\n        <h4>\n            <span style={styles[calculateDot(application?.new_status?.label)]}></span>\n            {application.new_status.label}\n        </h4>\n    </div>\n}","export default {\n    rowContainer: { \n        display: 'flex', \n        width: '100%', \n        justifyContent: 'space-between', \n        alignItems: 'center', \n        height: 60,\n        background: '#ecf0f1', \n        borderTop: '1px solid #7f8c8d'\n    }\n}","import React, { useState } from 'react';\nimport moment from 'moment';\n\nimport Rowitem from './RowItem'\n\nimport openIcon from '../ui-kit/icons/svg/icon-plus-with-circle.svg';\n\nimport { findCurrentStatus } from '../helpers/Row';\nimport styles from './Row.styles'\n\nexport default function Row({ data, setSelectedApplication, setIsModalOpen }) {\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const onRowClick = () => {\n        setIsOpen(!isOpen)\n    }\n\n    return <div onClick={onRowClick}>\n        <div style={styles.rowContainer}>\n            <div style={{ width: '15%' }}>{data.email}</div>\n            <div style={{ width: '10%' }}>{findCurrentStatus(data.applications)}</div>\n            <div style={{ width: '10%' }}>{data.applications.length}</div>\n            <div>{moment(data.profile?.updated).fromNow()}</div>\n            <img src={openIcon} alt=\"open icon\" />\n        </div>\n\n        <div style={{ display: (isOpen) ? 'block' : 'none' }} onClick={event => event.stopPropagation()}>\n            {data.applications.map((application) =>\n                <Rowitem\n                    key={application.id}\n                    application={application}\n                    setSelectedApplication={setSelectedApplication}\n                    setIsModalOpen={setIsModalOpen}\n                />\n            )}\n        </div>\n\n    </div>\n}\n\n","import React, { useState } from 'react';\n\nimport data from './data/candidates.json';\n\nimport { Modal } from './ui-kit/index';\nimport Row from './components/Row';\n\nconst styles = {\n  container: {\n    marginTop: 20,\n    padding: '20px',\n    backgroundColor: '#ecf0f1',\n    color: '#34495e'\n  }\n}\n\nfunction App() {\n\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [selectedApplication, setSelectedApplication] = useState({})\n\n  return (\n    <main style={styles.container}>\n\n      <h1>Users</h1>\n\n      <div style={{ display: 'flex', fontWeight: 'bold' }}>\n        <div style={{ width: '27%' }}>Name</div>\n        <div style={{ width: '20%' }}>Status</div>\n        <div style={{ width: '30%' }}># Apps</div>\n        <div>Last action</div>\n      </div>\n\n      {data.results.map((element) =>\n        <Row \n             key={element.id} \n             data={element}\n             setSelectedApplication={setSelectedApplication} \n             setIsModalOpen={setIsModalOpen} \n        />\n      )}\n\n      <Modal.Modal isOpen={isModalOpen} onClose={_ => { setIsModalOpen(false); setSelectedApplication({}) }}>\n        <Modal.Title>{selectedApplication?.role?.title}</Modal.Title>\n        <Modal.Body>\n          <div>\n            Jobboard title: \n            {selectedApplication?.role?.jobboard_title}\n          </div>\n        </Modal.Body>\n      </Modal.Modal>\n\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}